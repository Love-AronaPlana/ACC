{
  "npx--8905350279533309112:read_file": {
    "server": "npx--8905350279533309112",
    "name": "read_file",
    "tool_name": "npx--8905350279533309112:read_file",
    "description": "Read the complete contents of a file from the file system. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Only works within allowed directories.",
    "input_schema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx--8905350279533309112:read_multiple_files": {
    "server": "npx--8905350279533309112",
    "name": "read_multiple_files",
    "tool_name": "npx--8905350279533309112:read_multiple_files",
    "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.",
    "input_schema": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "paths"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx--8905350279533309112:write_file": {
    "server": "npx--8905350279533309112",
    "name": "write_file",
    "tool_name": "npx--8905350279533309112:write_file",
    "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.",
    "input_schema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      },
      "required": [
        "path",
        "content"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx--8905350279533309112:edit_file": {
    "server": "npx--8905350279533309112",
    "name": "edit_file",
    "tool_name": "npx--8905350279533309112:edit_file",
    "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.",
    "input_schema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "edits": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "oldText": {
                "type": "string",
                "description": "Text to search for - must match exactly"
              },
              "newText": {
                "type": "string",
                "description": "Text to replace with"
              }
            },
            "required": [
              "oldText",
              "newText"
            ],
            "additionalProperties": false
          }
        },
        "dryRun": {
          "type": "boolean",
          "default": false,
          "description": "Preview changes using git-style diff format"
        }
      },
      "required": [
        "path",
        "edits"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx--8905350279533309112:create_directory": {
    "server": "npx--8905350279533309112",
    "name": "create_directory",
    "tool_name": "npx--8905350279533309112:create_directory",
    "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.",
    "input_schema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx--8905350279533309112:list_directory": {
    "server": "npx--8905350279533309112",
    "name": "list_directory",
    "tool_name": "npx--8905350279533309112:list_directory",
    "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.",
    "input_schema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx--8905350279533309112:directory_tree": {
    "server": "npx--8905350279533309112",
    "name": "directory_tree",
    "tool_name": "npx--8905350279533309112:directory_tree",
    "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.",
    "input_schema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx--8905350279533309112:move_file": {
    "server": "npx--8905350279533309112",
    "name": "move_file",
    "tool_name": "npx--8905350279533309112:move_file",
    "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.",
    "input_schema": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        }
      },
      "required": [
        "source",
        "destination"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx--8905350279533309112:search_files": {
    "server": "npx--8905350279533309112",
    "name": "search_files",
    "tool_name": "npx--8905350279533309112:search_files",
    "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.",
    "input_schema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "excludePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "required": [
        "path",
        "pattern"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx--8905350279533309112:get_file_info": {
    "server": "npx--8905350279533309112",
    "name": "get_file_info",
    "tool_name": "npx--8905350279533309112:get_file_info",
    "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.",
    "input_schema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx--8905350279533309112:list_allowed_directories": {
    "server": "npx--8905350279533309112",
    "name": "list_allowed_directories",
    "tool_name": "npx--8905350279533309112:list_allowed_directories",
    "description": "Returns the list of directories that this server is allowed to access. Use this to understand which directories are available before trying to access files.",
    "input_schema": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  "npx-4604527498857307393:create_entities": {
    "server": "npx-4604527498857307393",
    "name": "create_entities",
    "tool_name": "npx-4604527498857307393:create_entities",
    "description": "Create multiple new entities in the knowledge graph",
    "input_schema": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the entity"
              },
              "entityType": {
                "type": "string",
                "description": "The type of the entity"
              },
              "observations": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "An array of observation contents associated with the entity"
              }
            },
            "required": [
              "name",
              "entityType",
              "observations"
            ]
          }
        }
      },
      "required": [
        "entities"
      ]
    }
  },
  "npx-4604527498857307393:create_relations": {
    "server": "npx-4604527498857307393",
    "name": "create_relations",
    "tool_name": "npx-4604527498857307393:create_relations",
    "description": "Create multiple new relations between entities in the knowledge graph. Relations should be in active voice",
    "input_schema": {
      "type": "object",
      "properties": {
        "relations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "description": "The name of the entity where the relation starts"
              },
              "to": {
                "type": "string",
                "description": "The name of the entity where the relation ends"
              },
              "relationType": {
                "type": "string",
                "description": "The type of the relation"
              }
            },
            "required": [
              "from",
              "to",
              "relationType"
            ]
          }
        }
      },
      "required": [
        "relations"
      ]
    }
  },
  "npx-4604527498857307393:add_observations": {
    "server": "npx-4604527498857307393",
    "name": "add_observations",
    "tool_name": "npx-4604527498857307393:add_observations",
    "description": "Add new observations to existing entities in the knowledge graph",
    "input_schema": {
      "type": "object",
      "properties": {
        "observations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "entityName": {
                "type": "string",
                "description": "The name of the entity to add the observations to"
              },
              "contents": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "An array of observation contents to add"
              }
            },
            "required": [
              "entityName",
              "contents"
            ]
          }
        }
      },
      "required": [
        "observations"
      ]
    }
  },
  "npx-4604527498857307393:delete_entities": {
    "server": "npx-4604527498857307393",
    "name": "delete_entities",
    "tool_name": "npx-4604527498857307393:delete_entities",
    "description": "Delete multiple entities and their associated relations from the knowledge graph",
    "input_schema": {
      "type": "object",
      "properties": {
        "entityNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of entity names to delete"
        }
      },
      "required": [
        "entityNames"
      ]
    }
  },
  "npx-4604527498857307393:delete_observations": {
    "server": "npx-4604527498857307393",
    "name": "delete_observations",
    "tool_name": "npx-4604527498857307393:delete_observations",
    "description": "Delete specific observations from entities in the knowledge graph",
    "input_schema": {
      "type": "object",
      "properties": {
        "deletions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "entityName": {
                "type": "string",
                "description": "The name of the entity containing the observations"
              },
              "observations": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "An array of observations to delete"
              }
            },
            "required": [
              "entityName",
              "observations"
            ]
          }
        }
      },
      "required": [
        "deletions"
      ]
    }
  },
  "npx-4604527498857307393:delete_relations": {
    "server": "npx-4604527498857307393",
    "name": "delete_relations",
    "tool_name": "npx-4604527498857307393:delete_relations",
    "description": "Delete multiple relations from the knowledge graph",
    "input_schema": {
      "type": "object",
      "properties": {
        "relations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "description": "The name of the entity where the relation starts"
              },
              "to": {
                "type": "string",
                "description": "The name of the entity where the relation ends"
              },
              "relationType": {
                "type": "string",
                "description": "The type of the relation"
              }
            },
            "required": [
              "from",
              "to",
              "relationType"
            ]
          },
          "description": "An array of relations to delete"
        }
      },
      "required": [
        "relations"
      ]
    }
  },
  "npx-4604527498857307393:read_graph": {
    "server": "npx-4604527498857307393",
    "name": "read_graph",
    "tool_name": "npx-4604527498857307393:read_graph",
    "description": "Read the entire knowledge graph",
    "input_schema": {
      "type": "object",
      "properties": {}
    }
  },
  "npx-4604527498857307393:search_nodes": {
    "server": "npx-4604527498857307393",
    "name": "search_nodes",
    "tool_name": "npx-4604527498857307393:search_nodes",
    "description": "Search for nodes in the knowledge graph based on a query",
    "input_schema": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "description": "The search query to match against entity names, types, and observation content"
        }
      },
      "required": [
        "query"
      ]
    }
  },
  "npx-4604527498857307393:open_nodes": {
    "server": "npx-4604527498857307393",
    "name": "open_nodes",
    "tool_name": "npx-4604527498857307393:open_nodes",
    "description": "Open specific nodes in the knowledge graph by their names",
    "input_schema": {
      "type": "object",
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of entity names to retrieve"
        }
      },
      "required": [
        "names"
      ]
    }
  },
  "npx--5259438053005011137:sequentialthinking": {
    "server": "npx--5259438053005011137",
    "name": "sequentialthinking",
    "tool_name": "npx--5259438053005011137:sequentialthinking",
    "description": "A detailed tool for dynamic and reflective problem-solving through thoughts.\nThis tool helps analyze problems through a flexible thinking process that can adapt and evolve.\nEach thought can build on, question, or revise previous insights as understanding deepens.\n\nWhen to use this tool:\n- Breaking down complex problems into steps\n- Planning and design with room for revision\n- Analysis that might need course correction\n- Problems where the full scope might not be clear initially\n- Problems that require a multi-step solution\n- Tasks that need to maintain context over multiple steps\n- Situations where irrelevant information needs to be filtered out\n\nKey features:\n- You can adjust total_thoughts up or down as you progress\n- You can question or revise previous thoughts\n- You can add more thoughts even after reaching what seemed like the end\n- You can express uncertainty and explore alternative approaches\n- Not every thought needs to build linearly - you can branch or backtrack\n- Generates a solution hypothesis\n- Verifies the hypothesis based on the Chain of Thought steps\n- Repeats the process until satisfied\n- Provides a correct answer\n\nParameters explained:\n- thought: Your current thinking step, which can include:\n* Regular analytical steps\n* Revisions of previous thoughts\n* Questions about previous decisions\n* Realizations about needing more analysis\n* Changes in approach\n* Hypothesis generation\n* Hypothesis verification\n- next_thought_needed: True if you need more thinking, even if at what seemed like the end\n- thought_number: Current number in sequence (can go beyond initial total if needed)\n- total_thoughts: Current estimate of thoughts needed (can be adjusted up/down)\n- is_revision: A boolean indicating if this thought revises previous thinking\n- revises_thought: If is_revision is true, which thought number is being reconsidered\n- branch_from_thought: If branching, which thought number is the branching point\n- branch_id: Identifier for the current branch (if any)\n- needs_more_thoughts: If reaching end but realizing more thoughts needed\n\nYou should:\n1. Start with an initial estimate of needed thoughts, but be ready to adjust\n2. Feel free to question or revise previous thoughts\n3. Don't hesitate to add more thoughts if needed, even at the \"end\"\n4. Express uncertainty when present\n5. Mark thoughts that revise previous thinking or branch into new paths\n6. Ignore information that is irrelevant to the current step\n7. Generate a solution hypothesis when appropriate\n8. Verify the hypothesis based on the Chain of Thought steps\n9. Repeat the process until satisfied with the solution\n10. Provide a single, ideally correct answer as the final output\n11. Only set next_thought_needed to false when truly done and a satisfactory answer is reached",
    "input_schema": {
      "type": "object",
      "properties": {
        "thought": {
          "type": "string",
          "description": "Your current thinking step"
        },
        "nextThoughtNeeded": {
          "type": "boolean",
          "description": "Whether another thought step is needed"
        },
        "thoughtNumber": {
          "type": "integer",
          "description": "Current thought number",
          "minimum": 1
        },
        "totalThoughts": {
          "type": "integer",
          "description": "Estimated total thoughts needed",
          "minimum": 1
        },
        "isRevision": {
          "type": "boolean",
          "description": "Whether this revises previous thinking"
        },
        "revisesThought": {
          "type": "integer",
          "description": "Which thought is being reconsidered",
          "minimum": 1
        },
        "branchFromThought": {
          "type": "integer",
          "description": "Branching point thought number",
          "minimum": 1
        },
        "branchId": {
          "type": "string",
          "description": "Branch identifier"
        },
        "needsMoreThoughts": {
          "type": "boolean",
          "description": "If more thoughts are needed"
        }
      },
      "required": [
        "thought",
        "nextThoughtNeeded",
        "thoughtNumber",
        "totalThoughts"
      ]
    }
  },
  "npx-7199855280037930293:browser_close": {
    "server": "npx-7199855280037930293",
    "name": "browser_close",
    "tool_name": "npx-7199855280037930293:browser_close",
    "description": "Close the page",
    "input_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_wait": {
    "server": "npx-7199855280037930293",
    "name": "browser_wait",
    "tool_name": "npx-7199855280037930293:browser_wait",
    "description": "Wait for a specified time in seconds",
    "input_schema": {
      "type": "object",
      "properties": {
        "time": {
          "type": "number",
          "description": "The time to wait in seconds"
        }
      },
      "required": [
        "time"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_file_upload": {
    "server": "npx-7199855280037930293",
    "name": "browser_file_upload",
    "tool_name": "npx-7199855280037930293:browser_file_upload",
    "description": "Upload one or multiple files",
    "input_schema": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The absolute paths to the files to upload. Can be a single file or multiple files."
        }
      },
      "required": [
        "paths"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_install": {
    "server": "npx-7199855280037930293",
    "name": "browser_install",
    "tool_name": "npx-7199855280037930293:browser_install",
    "description": "Install the browser specified in the config. Call this if you get an error about the browser not being installed.",
    "input_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_press_key": {
    "server": "npx-7199855280037930293",
    "name": "browser_press_key",
    "tool_name": "npx-7199855280037930293:browser_press_key",
    "description": "Press a key on the keyboard",
    "input_schema": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Name of the key to press or a character to generate, such as `ArrowLeft` or `a`"
        }
      },
      "required": [
        "key"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_navigate": {
    "server": "npx-7199855280037930293",
    "name": "browser_navigate",
    "tool_name": "npx-7199855280037930293:browser_navigate",
    "description": "Navigate to a URL",
    "input_schema": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL to navigate to"
        }
      },
      "required": [
        "url"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_navigate_back": {
    "server": "npx-7199855280037930293",
    "name": "browser_navigate_back",
    "tool_name": "npx-7199855280037930293:browser_navigate_back",
    "description": "Go back to the previous page",
    "input_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_navigate_forward": {
    "server": "npx-7199855280037930293",
    "name": "browser_navigate_forward",
    "tool_name": "npx-7199855280037930293:browser_navigate_forward",
    "description": "Go forward to the next page",
    "input_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_pdf_save": {
    "server": "npx-7199855280037930293",
    "name": "browser_pdf_save",
    "tool_name": "npx-7199855280037930293:browser_pdf_save",
    "description": "Save page as PDF",
    "input_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_snapshot": {
    "server": "npx-7199855280037930293",
    "name": "browser_snapshot",
    "tool_name": "npx-7199855280037930293:browser_snapshot",
    "description": "Capture accessibility snapshot of the current page, this is better than screenshot",
    "input_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_click": {
    "server": "npx-7199855280037930293",
    "name": "browser_click",
    "tool_name": "npx-7199855280037930293:browser_click",
    "description": "Perform click on a web page",
    "input_schema": {
      "type": "object",
      "properties": {
        "element": {
          "type": "string",
          "description": "Human-readable element description used to obtain permission to interact with the element"
        },
        "ref": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        }
      },
      "required": [
        "element",
        "ref"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_drag": {
    "server": "npx-7199855280037930293",
    "name": "browser_drag",
    "tool_name": "npx-7199855280037930293:browser_drag",
    "description": "Perform drag and drop between two elements",
    "input_schema": {
      "type": "object",
      "properties": {
        "startElement": {
          "type": "string",
          "description": "Human-readable source element description used to obtain the permission to interact with the element"
        },
        "startRef": {
          "type": "string",
          "description": "Exact source element reference from the page snapshot"
        },
        "endElement": {
          "type": "string",
          "description": "Human-readable target element description used to obtain the permission to interact with the element"
        },
        "endRef": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        }
      },
      "required": [
        "startElement",
        "startRef",
        "endElement",
        "endRef"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_hover": {
    "server": "npx-7199855280037930293",
    "name": "browser_hover",
    "tool_name": "npx-7199855280037930293:browser_hover",
    "description": "Hover over element on page",
    "input_schema": {
      "type": "object",
      "properties": {
        "element": {
          "type": "string",
          "description": "Human-readable element description used to obtain permission to interact with the element"
        },
        "ref": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        }
      },
      "required": [
        "element",
        "ref"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_type": {
    "server": "npx-7199855280037930293",
    "name": "browser_type",
    "tool_name": "npx-7199855280037930293:browser_type",
    "description": "Type text into editable element",
    "input_schema": {
      "type": "object",
      "properties": {
        "element": {
          "type": "string",
          "description": "Human-readable element description used to obtain permission to interact with the element"
        },
        "ref": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        },
        "text": {
          "type": "string",
          "description": "Text to type into the element"
        },
        "submit": {
          "type": "boolean",
          "description": "Whether to submit entered text (press Enter after)"
        },
        "slowly": {
          "type": "boolean",
          "description": "Whether to type one character at a time. Useful for triggering key handlers in the page. By default entire text is filled in at once."
        }
      },
      "required": [
        "element",
        "ref",
        "text"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_select_option": {
    "server": "npx-7199855280037930293",
    "name": "browser_select_option",
    "tool_name": "npx-7199855280037930293:browser_select_option",
    "description": "Select an option in a dropdown",
    "input_schema": {
      "type": "object",
      "properties": {
        "element": {
          "type": "string",
          "description": "Human-readable element description used to obtain permission to interact with the element"
        },
        "ref": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of values to select in the dropdown. This can be a single value or multiple values."
        }
      },
      "required": [
        "element",
        "ref",
        "values"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_take_screenshot": {
    "server": "npx-7199855280037930293",
    "name": "browser_take_screenshot",
    "tool_name": "npx-7199855280037930293:browser_take_screenshot",
    "description": "Take a screenshot of the current page. You can't perform actions based on the screenshot, use browser_snapshot for actions.",
    "input_schema": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "boolean",
          "description": "Whether to return without compression (in PNG format). Default is false, which returns a JPEG image."
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_tab_list": {
    "server": "npx-7199855280037930293",
    "name": "browser_tab_list",
    "tool_name": "npx-7199855280037930293:browser_tab_list",
    "description": "List browser tabs",
    "input_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_tab_new": {
    "server": "npx-7199855280037930293",
    "name": "browser_tab_new",
    "tool_name": "npx-7199855280037930293:browser_tab_new",
    "description": "Open a new tab",
    "input_schema": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL to navigate to in the new tab. If not provided, the new tab will be blank."
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_tab_select": {
    "server": "npx-7199855280037930293",
    "name": "browser_tab_select",
    "tool_name": "npx-7199855280037930293:browser_tab_select",
    "description": "Select a tab by index",
    "input_schema": {
      "type": "object",
      "properties": {
        "index": {
          "type": "number",
          "description": "The index of the tab to select"
        }
      },
      "required": [
        "index"
      ],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "npx-7199855280037930293:browser_tab_close": {
    "server": "npx-7199855280037930293",
    "name": "browser_tab_close",
    "tool_name": "npx-7199855280037930293:browser_tab_close",
    "description": "Close a tab",
    "input_schema": {
      "type": "object",
      "properties": {
        "index": {
          "type": "number",
          "description": "The index of the tab to close. Closes current tab if not provided."
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "python--7888863154425440896:add": {
    "server": "python--7888863154425440896",
    "name": "add",
    "tool_name": "python--7888863154425440896:add",
    "description": "Add two numbers.\n\nArgs:\n    a: The first number\n    b: The second number\nReturns:\n    The sum of a and b\n",
    "input_schema": {
      "properties": {
        "a": {
          "title": "A",
          "type": "number"
        },
        "b": {
          "title": "B",
          "type": "number"
        }
      },
      "required": [
        "a",
        "b"
      ],
      "title": "addArguments",
      "type": "object"
    }
  },
  "python--7888863154425440896:subtract": {
    "server": "python--7888863154425440896",
    "name": "subtract",
    "tool_name": "python--7888863154425440896:subtract",
    "description": "Subtract b from a.\n\nArgs:\n    a: The first number\n    b: The second number\nReturns:\n    The difference of a and b\n",
    "input_schema": {
      "properties": {
        "a": {
          "title": "A",
          "type": "number"
        },
        "b": {
          "title": "B",
          "type": "number"
        }
      },
      "required": [
        "a",
        "b"
      ],
      "title": "subtractArguments",
      "type": "object"
    }
  },
  "python--7888863154425440896:multiply": {
    "server": "python--7888863154425440896",
    "name": "multiply",
    "tool_name": "python--7888863154425440896:multiply",
    "description": "Multiply two numbers.\n\nArgs:\n    a: The first number\n    b: The second number\nReturns:\n    The product of a and b\n",
    "input_schema": {
      "properties": {
        "a": {
          "title": "A",
          "type": "number"
        },
        "b": {
          "title": "B",
          "type": "number"
        }
      },
      "required": [
        "a",
        "b"
      ],
      "title": "multiplyArguments",
      "type": "object"
    }
  },
  "python--7888863154425440896:divide": {
    "server": "python--7888863154425440896",
    "name": "divide",
    "tool_name": "python--7888863154425440896:divide",
    "description": "Divide a by b.\n\nArgs:\n    a: The dividend\n    b: The divisor\nReturns:\n    The quotient of a and b\n",
    "input_schema": {
      "properties": {
        "a": {
          "title": "A",
          "type": "number"
        },
        "b": {
          "title": "B",
          "type": "number"
        }
      },
      "required": [
        "a",
        "b"
      ],
      "title": "divideArguments",
      "type": "object"
    }
  },
  "python--7888863154425440896:power": {
    "server": "python--7888863154425440896",
    "name": "power",
    "tool_name": "python--7888863154425440896:power",
    "description": "Calculate base raised to the power of exponent.\n\nArgs:\n    base: The base number\n    exponent: The exponent\nReturns:\n    base raised to the power of exponent\n",
    "input_schema": {
      "properties": {
        "base": {
          "title": "Base",
          "type": "number"
        },
        "exponent": {
          "title": "Exponent",
          "type": "number"
        }
      },
      "required": [
        "base",
        "exponent"
      ],
      "title": "powerArguments",
      "type": "object"
    }
  },
  "python--7888863154425440896:sqrt": {
    "server": "python--7888863154425440896",
    "name": "sqrt",
    "tool_name": "python--7888863154425440896:sqrt",
    "description": "Calculate the square root of x.\n\nArgs:\n    x: The number to calculate the square root of\nReturns:\n    The square root of x\n",
    "input_schema": {
      "properties": {
        "x": {
          "title": "X",
          "type": "number"
        }
      },
      "required": [
        "x"
      ],
      "title": "sqrtArguments",
      "type": "object"
    }
  },
  "python--7888863154425440896:log": {
    "server": "python--7888863154425440896",
    "name": "log",
    "tool_name": "python--7888863154425440896:log",
    "description": "Calculate the logarithm of x with the given base.\n\nArgs:\n    x: The number to calculate the logarithm of\n    base: The base of the logarithm (default is e)\nReturns:\n    The logarithm of x with the given base\n",
    "input_schema": {
      "properties": {
        "x": {
          "title": "X",
          "type": "number"
        },
        "base": {
          "default": 2.718281828459045,
          "title": "Base",
          "type": "number"
        }
      },
      "required": [
        "x"
      ],
      "title": "logArguments",
      "type": "object"
    }
  },
  "python--7888863154425440896:sin": {
    "server": "python--7888863154425440896",
    "name": "sin",
    "tool_name": "python--7888863154425440896:sin",
    "description": "Calculate sine of x (in radians).\n\nArgs:\n    x: The angle in radians\nReturns:\n    The sine of x\n",
    "input_schema": {
      "properties": {
        "x": {
          "title": "X",
          "type": "number"
        }
      },
      "required": [
        "x"
      ],
      "title": "sinArguments",
      "type": "object"
    }
  },
  "python--7888863154425440896:cos": {
    "server": "python--7888863154425440896",
    "name": "cos",
    "tool_name": "python--7888863154425440896:cos",
    "description": "Calculate cosine of x (in radians).\n\nArgs:\n    x: The angle in radians\nReturns:\n    The cosine of x\n",
    "input_schema": {
      "properties": {
        "x": {
          "title": "X",
          "type": "number"
        }
      },
      "required": [
        "x"
      ],
      "title": "cosArguments",
      "type": "object"
    }
  },
  "python--7888863154425440896:tan": {
    "server": "python--7888863154425440896",
    "name": "tan",
    "tool_name": "python--7888863154425440896:tan",
    "description": "Calculate tangent of x (in radians).\n\nArgs:\n    x: The angle in radians\nReturns:\n    The tangent of x\n",
    "input_schema": {
      "properties": {
        "x": {
          "title": "X",
          "type": "number"
        }
      },
      "required": [
        "x"
      ],
      "title": "tanArguments",
      "type": "object"
    }
  },
  "python--7888863154425440896:mean": {
    "server": "python--7888863154425440896",
    "name": "mean",
    "tool_name": "python--7888863154425440896:mean",
    "description": "Calculate the mean of a list of numbers.\n\nArgs:\n    numbers: List of numbers\nReturns:\n    The mean of the numbers\n",
    "input_schema": {
      "properties": {
        "numbers": {
          "items": {
            "type": "number"
          },
          "title": "Numbers",
          "type": "array"
        }
      },
      "required": [
        "numbers"
      ],
      "title": "meanArguments",
      "type": "object"
    }
  },
  "python--7888863154425440896:median": {
    "server": "python--7888863154425440896",
    "name": "median",
    "tool_name": "python--7888863154425440896:median",
    "description": "Calculate the median of a list of numbers.\n\nArgs:\n    numbers: List of numbers\nReturns:\n    The median of the numbers\n",
    "input_schema": {
      "properties": {
        "numbers": {
          "items": {
            "type": "number"
          },
          "title": "Numbers",
          "type": "array"
        }
      },
      "required": [
        "numbers"
      ],
      "title": "medianArguments",
      "type": "object"
    }
  },
  "python--7888863154425440896:stdev": {
    "server": "python--7888863154425440896",
    "name": "stdev",
    "tool_name": "python--7888863154425440896:stdev",
    "description": "Calculate the standard deviation of a list of numbers.\n\nArgs:\n    numbers: List of numbers\nReturns:\n    The standard deviation of the numbers\n",
    "input_schema": {
      "properties": {
        "numbers": {
          "items": {
            "type": "number"
          },
          "title": "Numbers",
          "type": "array"
        }
      },
      "required": [
        "numbers"
      ],
      "title": "stdevArguments",
      "type": "object"
    }
  },
  "python--7888863154425440896:matrix_multiply": {
    "server": "python--7888863154425440896",
    "name": "matrix_multiply",
    "tool_name": "python--7888863154425440896:matrix_multiply",
    "description": "Multiply two matrices.\n\nArgs:\n    a: First matrix\n    b: Second matrix\nReturns:\n    The product of the two matrices\n",
    "input_schema": {
      "properties": {
        "a": {
          "items": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "title": "A",
          "type": "array"
        },
        "b": {
          "items": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "title": "B",
          "type": "array"
        }
      },
      "required": [
        "a",
        "b"
      ],
      "title": "matrix_multiplyArguments",
      "type": "object"
    }
  }
}